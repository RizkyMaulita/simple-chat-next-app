// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String               @id @default(auto()) @map("_id") @db.ObjectId
  email               String               @unique
  username            String
  password            String
  groupChannelOwners  GroupChannel[]
  groupChannelMembers GroupChannelMember[]
  groupChatSenders    GroupChat[]
  groupChatMembers    GroupChatMember[]
}

model GroupChannel {
  id        String               @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  imgUrl    String
  authorId  String               @db.ObjectId
  author    User                 @relation(fields: [authorId], references: [id])
  createdAt DateTime
  members   GroupChannelMember[]
}

model GroupChannelMember {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  groupChannelId String       @db.ObjectId
  groupChannel   GroupChannel @relation(fields: [groupChannelId], references: [id])
  userId         String       @db.ObjectId
  user           User         @relation(fields: [userId], references: [id])
  joinDate       DateTime
}

model GroupChat {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  summaryChatId String?
  historyChatId String?
  lastMessage   String
  lastSenderId  String            @db.ObjectId
  lastSender    User              @relation(fields: [lastSenderId], references: [id])
  updatedAt     DateTime
  members       GroupChatMember[]
}

model GroupChatMember {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  groupChatId String    @db.ObjectId
  groupChat   GroupChat @relation(fields: [groupChatId], references: [id])
}
